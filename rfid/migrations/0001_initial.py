# Generated by Django 4.0 on 2023-02-20 01:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LastReadingsSnapshot',
            fields=[
                ('epc', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('timestamp_reading', models.DateTimeField()),
            ],
            options={
                'db_table': 'last_readings_snapshot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140)),
                ('description', models.CharField(blank=True, max_length=140, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.location')),
            ],
            options={
                'db_table': 'node',
            },
        ),
        migrations.CreateModel(
            name='Reader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140)),
                ('serial_number', models.CharField(max_length=140, unique=True)),
            ],
            options={
                'db_table': 'reader',
            },
        ),
        migrations.CreateModel(
            name='ReaderAntenna',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140)),
                ('serial_number', models.CharField(max_length=140, unique=True)),
                ('position', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='antennas', to='inventory.position')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rfid.reader')),
            ],
            options={
                'db_table': 'reader_antenna',
            },
        ),
        migrations.CreateModel(
            name='ReaderBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140)),
            ],
            options={
                'db_table': 'reader_brand',
            },
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('epc', models.CharField(max_length=150)),
                ('timestamp_reading', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(choices=[('IN', 'Entrada'), ('OUT', 'Salida'), ('READ', 'Lectura')], default='READ', max_length=10)),
                ('antenna', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='rfid.readerantenna')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rfid.node')),
                ('reader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='rfid.reader')),
            ],
            options={
                'db_table': 'reading',
            },
        ),
        migrations.AddField(
            model_name='reader',
            name='brand',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='rfid.readerbrand'),
        ),
        migrations.RunSQL(
            """
            create or replace view  last_readings_snapshot as
            select 
            reading.epc, reading.timestamp_reading, reading.antenna_id, reading.reader_id, reading.node_id,
            item.sku_id, node.location_id, position.id as position_id
            from reading
            left join item on reading.epc = item.epc
            left join node on reading.node_id = node.id
            left join reader_antenna as antenna on reading.antenna_id = antenna.id
            left join position on antenna.position_id = position.id 
            where (reading.epc,reading.timestamp_reading) in
            (select epc, max(timestamp_reading) from reading group by epc)
            """
        )
    ]
